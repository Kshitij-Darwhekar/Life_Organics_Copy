@* @model IEnumerable<OrganicStore.Models.Products> *@


@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="shopping-cart">
    <!-- Title -->
    <div class="title">
        Shopping Bag
    </div>

    <!-- Product #1 -->
    @* @foreach(var Products in Model)
    { *@
       @*  <div class="item">
            <div class="buttons">
                <span class="delete-btn"></span>
                <span class="like-btn"></span>
            </div>

            <div class="image">
                <img src="@Url.Content("~/lib/Apple.jpg")" width="70px" alt="" />
            </div>

            <div class="description">
                <span><strong>Apple</strong></span>
                 <p>Fresh and crisp apples from local orchards.</p>
               
            </div>

            <div class="quantity">
                <button class="plus-btn" type="button" name="button">
                    <img src="@Url.Content("~/lib/plus.svg")" alt="" />
                </button>
                <input type="text" name="name" value="1">
                <button class="minus-btn" type="button" name="button">
                    <img src="@Url.Content("~/lib/minus.svg")" alt="" />
                </button>
            </div>

            <div class="total-price">223</div>
        </div> *@
   @*  } *@

   
       @*  <div>
            <h4>@ps.name</h4>
            <p>Price: $@ps.selling_price</p>
            <p>Category: @ps.category</p>
            <p>@ps.details</p>
            <img src="@ps.pic" alt="Product Image" />

            <!-- Add to Cart button/link -->
            <form asp-controller="Cart" asp-action="AddToCart" method="post">
                <input type="hidden" name="productId" value="@ps.product_id" />
                <input type="submit" value="Add to Cart" />
            </form>
        </div> *@
    

    <!-- Product #2 -->
     @* <div class="item">
        <div class="buttons">
            <span class="delete-btn"></span>
            <span class="like-btn"></span>
        </div>

        <div class="image">
            <img src="@Url.Content("~/lib/carrot.jpg")" width="70px" alt="" />
        </div>

        <div class="description">
            <span>Carrot</span>
            
        </div>

        <div class="quantity">
            <button class="plus-btn" type="button" name="button">
                <img src="@Url.Content("~/lib/plus.svg")" alt="" />
            </button>
            <input type="text" name="name" value="1">
            <button class="minus-btn" type="button" name="button">
                <img src="@Url.Content("~/lib/minus.svg")" alt="" />
            </button>
        </div>

        <div class="total-price">$229</div>
    </div> 

    <!-- Product #3 -->
     <div class="item">
        <div class="buttons">
            <span class="delete-btn"></span>
            <span class="like-btn"></span>
        </div>

        <div class="image">
            <img src="@Url.Content("~/lib/tomato.jpg")" width="70px" alt="" />
        </div>

        <div class="description">
            <span>Tomato</span>
            <span></span>
            <span></span>
        </div>

        <div class="quantity">
            <button class="plus-btn" type="button" name="button">
            <img src="@Url.Content("~/lib/plus.svg")" alt="" />
            </button>
            <input type="text" name="name" value="1">
            <button class="minus-btn" type="button" name="button">
                <img src="@Url.Content("~/lib/minus.svg")" alt="" />
            </button>
        </div>

        <div class="total-price">$349</div>
    </div>
</div>
 *@

    <div class="container">
        @using (Html.BeginForm("SubmitCart", "Cart", FormMethod.Post))
        {
            <table class="table cart-table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="cart-container"></tbody>
            </table>
            <div id="grand-total">Grand Total: &#8377 0.00</div>
            <button onclick="submitCart()">Submit Cart</button>
        }
    </div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
@* <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script> *@
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

 <script>
    function submitCart() {
        // Retrieve cart data from sessionStorage
        var cart = JSON.parse(sessionStorage.getItem("cart")) || [];

        // Send the cart data to your backend (assuming you have a CartController with a SubmitCart action)
        fetch('/Cart/SubmitCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ cart: cart })
        })
            .then(response => response.json())
            .then(data => {
                // Handle the response from the server if needed
                console.log(data);
            })
            .catch(error => {
                console.error('Error submitting cart:', error);
            });
    }
    const products = JSON.parse(sessionStorage.getItem("cart")) || [];

    // Function to render the shopping cart
    function renderCart() {
        let cartData = {
               
                "1": {
                    "img": " /lib/orange.jpg",
                    "name": "orange",
                    "price": 120

                },
                "2": {
                    "img": " /lib/apple.jpg",
                    "name": "apple",
                    "price": 180

                },
                "3": {
                    "img": " /lib/banana.jpg",
                    "name": "banana",
                    "price": 25

                },
                "4": {
                    "img": " /lib/carrot.jpg",
                    "name": "carrot",
                    "price": 65

                },
                "5": {
                    "img": " /lib/broccoli.jpg",
                    "name": "brocoli",
                    "price": 190

                },
                "6": {
                    "img": " /lib/tomato.jpg",
                    "name": "carrot",
                    "price": 30

                },
                "7": {
                    "img": " /lib/spinach.jpeg",
                    "name": "spinach",
                    "price": 80

                },
                "8": {
                    "img": " /lib/kale.jpg",
                    "name": "kale",
                    "price": 130

                },
                "9": {
                    "img": " /lib/lettuce.jpg",
                    "name": "lettuce",
                    "price": 230

                }
        }
        const cartContainer = document.getElementById('cart-container');
        cartContainer.innerHTML = '';

        let grandTotal = 0;

        products.forEach(Product => {
            const row = document.createElement('tr');
            row.classList.add('cart-item');
            console.log(products);
            total = cartData[Product.productId].price * Product.quantity;
            row.innerHTML = `

                                        <td><img src = "@Url.Content("${cartData[product.productId].img}")" ></td>
                                        <td>${cartData[Product.productId].name}</td>
                                        <td>${cartData[Product.productId].price}</td>
                                        <td>${Product.quantity}</td>
                                        <td>${total}</td>

                        `;
            cartContainer.appendChild(row);
            grandTotal += cartData[product.productId].price * product.quantity;
        });
        document.getElementById('grand-total').innerText = `Grand Total: ₹ ${grandTotal.toFixed(2)}`;
    }


    // Function to update quantity
    function updateQuantity(productId, quantityChange) {
        const product = products.find(p => p.id === productId);
        if (product) {
            product.quantity += quantityChange;
            if (product.quantity < 1) {
                product.quantity = 1;
            }
            renderCart();
        }
    }

    // Function to remove item
    function removeItem(productId) {
        const index = products.findIndex(p => p.id === productId);
        if (index !== -1) {
            products.splice(index, 1);
            renderCart();
        }
    }

    // Initial rendering
    renderCart();
</script>
 